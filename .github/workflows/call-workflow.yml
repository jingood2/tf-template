
name: Terraform CICD Workflow

on:
  pull_request:
    #types:
    #  - opened
    #  - reopened
    #  - synchronize
    #  - closed
    branches:
      - main

jobs:
  terraform-scan:
    name: terraform-scan
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    permissions:
      actions: read
      contents: read
      security-events: write
      pull-requests: write

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: true
          terraform_version: 1.3.0

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Post Format
        if: always() && github.ref != 'refs/heads/main' && (steps.fmt.outcome == 'success' || steps.fmt.outcome == 'failure')
        uses: robburger/terraform-pr-commenter@v1
        with:
          commenter_type: fmt
          commenter_input: ${{ format('{0}{1}', steps.fmt.outputs.stdout, steps.fmt.outputs.stderr) }}
          commenter_exitcode: ${{ steps.fmt.outputs.exitcode }}
      
      - name: tfsec
        uses: aquasecurity/tfsec-pr-commenter-action@v1.3.1
        with:
          working_directory: .
          soft_fail_commenter: false
          tfsec_formats: default,sarif,checkstyle
          github_token: ${{ secrets.GITHUB_TOKEN }}

      #- name: Scan IaC - tfsec
        #if: ${{ inputs.ENABLE_TFSEC == 'true' }}
      #  uses: aquasecurity/tfsec-sarif-action@v0.1.3
      #  with:
      #    sarif_file: tfsec.sarif

      - name: Upload SARIF file
        #if: ${{ inputs.ENABLE_TFSEC == 'true' }}
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: results.sarif.json
  terraform-plan:
    name: terraform-plan
    needs: terraform-scan
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        path:
          - dev
          - prod
    env:
      TF_VAR_allowed_account_id: ${{ secrets.ALLOWED_ACCOUNT_ID }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      EXPAND_SUMMARY_DETAILS: true
      TF_IN_AUTOMATION: true
      TF_WORKSPACE: ${{ matrix['path'] }}

    permissions: write-all

    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_wrapper: true
        terraform_version: 1.3.0
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1-node16
      with:
        aws-region: ap-northeast-2
        #role-to-assume: arn:aws:iam::783857413761:role/GithubOIDCRole
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    
    - name: Terraform Init - ${{ matrix['path'] }}
      id: init
      #run: terraform init -input=false -backend-config="key=${{matrix.path}}"
      run: |
        SAVED_TF_WORKSPACE=$TF_WORKSPACE
        unset TF_WORKSPACE
        terraform init -input=false -backend-config="key=${{matrix['path']}}" -backend-config="backends/${{matrix.path}}.conf"
        TF_WORKSPACE=$SAVED_TF_WORKSPACE
        terraform workspace select "${TF_WORKSPACE}" || terraform workspace new "${TF_WORKSPACE}"


    - name: Post Init - ${{ matrix['path'] }}
      if: always() && github.ref != 'refs/heads/main' && (steps.init.outcome == 'success' || steps.init.outcome == 'failure')
      uses: robburger/terraform-pr-commenter@v1
      with:
        commenter_type: init
        commenter_input: ${{ format('{0}{1}', steps.init.outputs.stdout, steps.init.outputs.stderr) }}
        commenter_exitcode: ${{ steps.init.outputs.exitcode }}
    

    - name: Terraform Plan
      id: plan
      run: terraform plan --var-file=environments/${{matrix.path}}.auto.tfvars --out=plan.tfplan
      continue-on-error: true

    - name: Post Plan
      uses: robburger/terraform-pr-commenter@v1
      env:
        EXPAND_SUMMARY_DETAILS: true # Override global environment variable; expand details just for this step
      with:
        commenter_type: plan
        commenter_input: ${{ format('{0}{1}', steps.plan.outputs.stdout, steps.plan.outputs.stderr) }}
        commenter_exitcode: ${{ steps.plan.outputs.exitcode }}

    - name: Terraform Plan Status
      if: steps.plan.outcome == 'failure'
      run: exit 1

    - name: Compress TF Plan artifact
      run: |
        zip -r tfplan.zip ./*

    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.path }}
        #path: '${{ matrix.path }}.zip'
        path: 'tfplan.zip'
        retention-days: 5

  deploy_dev:
    needs: [terraform-plan]
    uses: ./.github/workflows/apply-workflow.yml
    with:
      path: tfplan
      gh_environment: dev
      tf_version: 1.3.0
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  
  #deploy_prod:
  #  if: github.event.pull_request.merged 
  #  needs: [deploy_dev, plan_prod]
  #  uses: ./.github/workflows/apply-workflow.yml
  #  with:
  #    path: tfplan
  #    gh_environment: prod
  #    tf_version: 1.3.0
  #  secrets:
  #    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
