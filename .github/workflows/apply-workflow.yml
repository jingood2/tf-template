### Reusable workflow to download terraform artifact built by `az_tf_plan` and apply the artifact/plan ###
name: 'Apply_TF_Plan'
on:
  workflow_call:
    inputs:
      path:
        description: 'Specifies the path of the root terraform module.'
        required: true
        type: string
      tf_version:
        description: 'Specifies version of Terraform to use. e.g: 1.1.0 Default=latest.'
        required: false
        type: string
        default: latest
      gh_environment:
        description: 'Specifies the GitHub deployment environment.'
        required: true
        type: string
      enable_workspace:
        description: 'Enable Terraform workspace.'
        required: false
        type: string
        default: false
    secrets:
      AWS_ACCESS_KEY_ID:
        description: 'Specifies the AWS_CLIENT_ID.'
        required: true
      AWS_SECRET_ACCESS_KEY:
        description: 'Specifies the AWS_SECRET_ACCESS_KEY.'
        required: true

jobs:
  apply-plan:
    runs-on: ubuntu-latest
    environment: ${{ inputs.gh_environment }}
    defaults:
      run:
        shell: bash
    env:
      TF_KEY: ${{ inputs.gh_environment }}
      TF_WORKSPACE: ${{ inputs.gh_environment }}
      #AWS_CLIENT_ID: ${{ secrets.aws_client_id }}
      #AWS_CLIENT_SECRET: ${{ secrets.aws_client_secret }}

    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.TF_KEY }}
          #path: ${{ inputs.path }}

      - name: Decompress TF Plan artifact
        run: unzip tfplan.zip
      
      #- name: New Workspace
      #  id: new_workspace 
      #  run: terraform workspace new ${{inputs.gh_environment}}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-region: ap-northeast-2
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          #role-to-assume: arn:aws:iam::783857413761:role/GithubOIDCRole

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ inputs.tf_version }}

      - name: Terraform Init - ${{ inputs.gh_environment }}
        id: init
        #run: terraform init -input=false -backend-config="key=${{matrix.path}}"
        run: |
          SAVED_TF_WORKSPACE=$TF_WORKSPACE
          unset TF_WORKSPACE
          terraform init -input=false -backend-config="key=${{inputs.gh_environment}}}" -backend-config="backends/${{inputs.gh_environment}}.conf"
          TF_WORKSPACE=$SAVED_TF_WORKSPACE
          terraform workspace select "${TF_WORKSPACE}" || terraform workspace new "${TF_WORKSPACE}"
      
      #- name: Select Workspace
      #  id: select_workspace
      #  run: terraform workspace select ${{inputs.gh_environment}}
      - name: Label dev when approved
        uses: pullreminders/label-when-approved-action@master
        env:
          APPROVALS: "1"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ADD_LABEL: "${{inputs.gh_environment}} approved"

      - name: Terraform Apply
        run: |
          terraform apply plan.tfplan
