name: Plan / Test On PR

on:
  pull_request:
    branches:
      - main

jobs:
  scann:
    name: Scan 
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      
      - name: Terraform Format
        id: fmt
        run: terraform fmt --check

      - name: Scan IaC - tfsec
        if: ${{ inputs.ENABLE_TFSEC == 'true' }}
        uses: aquasecurity/tfsec-sarif-action@v0.1.3
        with:
          sarif_file: tfsec.sarif

      - name: Upload SARIF file
        if: ${{ inputs.ENABLE_TFSEC == 'true' }}
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: tfsec.sarif
  plan:
    name: Plan
    needs: scan 
    env:
      TF_VAR_allowed_account_id: ${{ secrets.ALLOWED_ACCOUNT_ID }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        path:
          - dev

    permissions: write-all

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_wrapper: false
        terraform_version: 1.0.9

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: us-east-1
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Terraform Init 
      run: terraform init -input=false

    - name: Terraform Plan
      id: plan
      run: terraform plan --var-file=environments/${{matrix.path}}.auto.tfvars --out=plan.tfplan
      continue-on-error: true
    
    - name: Terraform Plan Status
      if: steps.plan.outcome == 'failure'
      run: exit 1

    - name: Compress TF Plan artifact
      run: zip -r ${{ inputs.tf_key }}.zip ./*

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: '${{ inputs.tf_key }}'
        path: '${{ inputs.path }}/${{ inputs.tf_key }}.zip'
        retention-days: 5
