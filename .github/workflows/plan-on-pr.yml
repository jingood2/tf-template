name: Plan / Test On PR

on:
  pull_request:
    branches:
      - main

jobs:
  terraform-scan:
    name: terraform-scan 
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: true
          terraform_version: 1.0.9
      
      - name: Terraform Format
        id: fmt
        run: terraform fmt -check -recursive
        continue-on-error: true
      
      #- name: Post Format
      #  if: always() && github.ref != 'refs/heads/main' && (steps.fmt.outcome == 'success' || steps.fmt.outcome == 'failure')
      #  uses: robburger/terraform-pr-commenter@v1
      #  with:
      #    commenter_type: fmt
      #    commenter_input: ${{ format('{0}{1}', steps.fmt.outputs.stdout, steps.fmt.outputs.stderr) }}
      #    commenter_exitcode: ${{ steps.fmt.outputs.exitcode }}

      - name: Scan IaC - tfsec
        #if: ${{ inputs.ENABLE_TFSEC == 'true' }}
        uses: aquasecurity/tfsec-sarif-action@v0.1.3
        with:
          sarif_file: tfsec.sarif

      - name: Upload SARIF file
        #if: ${{ inputs.ENABLE_TFSEC == 'true' }}
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: tfsec.sarif
  terraform-plan:
    name: terraform-plan
    needs: terraform-scan 
    env:
      TF_VAR_allowed_account_id: ${{ secrets.ALLOWED_ACCOUNT_ID }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        path:
          - dev

    permissions: write-all

    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_wrapper: true
        terraform_version: 1.0.9

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: us-east-1
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Terraform Init 
      id: init
      run: terraform init -input=false -backend-config="key=${{matrix.path}}"
    
    - name: Post Init
      if: always() && github.ref != 'refs/heads/main' && (steps.init.outcome == 'success' || steps.init.outcome == 'failure')
      uses: robburger/terraform-pr-commenter@v1
      with:
        commenter_type: init
        commenter_input: ${{ format('{0}{1}', steps.init.outputs.stdout, steps.init.outputs.stderr) }}
        commenter_exitcode: ${{ steps.init.outputs.exitcode }}

    - name: Terraform Plan
      id: plan
      run: terraform plan --var-file=environments/${{matrix.path}}.auto.tfvars --out=plan.tfplan
      continue-on-error: true
    
    - name: Terraform Plan Status
      if: steps.plan.outcome == 'failure'
      run: exit 1

    - name: Compress TF Plan artifact
      run: |
        mkdir -p  tfplan
        zip -r tfplan/${{ matrix.path }}.zip ./*

    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: '${{ matrix.path }}.tfplan'
        path: 'tfplan/${{ matrix.path }}.zip'
        retention-days: 5
